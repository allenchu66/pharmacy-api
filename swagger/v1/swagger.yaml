---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/mask_types":
    get:
      summary: Get all MaskTypes (support search by id / keyword)
      tags:
      - MaskTypes
      parameters:
      - name: id
        in: query
        required: false
        description: Filter by MaskType ID
        schema:
          type: integer
      - name: keyword
        in: query
        required: false
        description: Fuzzy search by name
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        created_at:
                          type: string
                          format: date_time
                        updated_at:
                          type: string
                          format: date_time
    post:
      summary: Create MaskType
      tags:
      - MaskTypes
      parameters: []
      responses:
        '200':
          description: Success
        '422':
          description: Validation failed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                color:
                  type: string
                size:
                  type: string
              required:
              - name
  "/api/mask_types/{id}":
    get:
      summary: Get specific MaskType
      tags:
      - MaskTypes
      parameters:
      - name: id
        in: path
        required: true
        description: MaskType ID
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      created_at:
                        type: string
                        format: date_time
                      updated_at:
                        type: string
                        format: date_time
        '404':
          description: MaskType not found
  "/api/masks":
    get:
      summary: Get all masks (support search & filters)
      tags:
      - Masks
      parameters:
      - name: keyword
        in: query
        description: Keyword search by mask name
        schema:
          type: string
      - name: stock_gt
        in: query
        description: Stock greater than
        schema:
          type: integer
      - name: stock_lt
        in: query
        description: Stock less than
        schema:
          type: integer
      - name: price_min
        in: query
        description: Minimum price
        schema:
          type: number
      - name: price_max
        in: query
        description: Maximum price
        schema:
          type: number
      - name: sort
        in: query
        description: Sort by price_asc, price_desc, name_asc, or name_desc
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                        stock:
                          type: integer
                        pharmacy:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
  "/api/orders/analytics/top_users":
    get:
      summary: Top Users Ranking
      tags:
      - Orders Analytics
      parameters:
      - name: start_date
        in: query
        required: true
        description: Start date (yyyy-mm-dd)
        schema:
          type: string
      - name: end_date
        in: query
        required: true
        description: End date (yyyy-mm-dd)
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: Top N users (default is 5)
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            user_id:
                              type: integer
                            user_name:
                              type: string
                            total_amount:
                              type: number
                            total_quantity:
                              type: integer
                            orders:
                              type: array
                              items:
                                type: object
                                properties:
                                  pharmacy_id:
                                    type: number
                                  pharmacy_name:
                                    type: string
                                  total_price:
                                    type: number
                                  created_at:
                                    type: string
                                    format: date_time
                                  items:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        mask_id:
                                          type: integer
                                        mask_name:
                                          type: string
                                        price:
                                          type: number
                                        quantity:
                                          type: integer
  "/api/orders/analytics/statistics":
    get:
      summary: Order Statistics Summary
      tags:
      - Orders Analytics
      parameters:
      - name: start_date
        in: query
        required: true
        description: Start date (yyyy-mm-dd)
        schema:
          type: string
      - name: end_date
        in: query
        required: true
        description: End date (yyyy-mm-dd)
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      total_quantity:
                        type: integer
                      total_amount:
                        type: number
                      mask_summary:
                        type: array
                        items:
                          type: object
                          properties:
                            mask_id:
                              type: integer
                            mask_name:
                              type: string
                            total_quantity:
                              type: integer
                            total_amount:
                              type: number
                      pharmacy_summary:
                        type: array
                        items:
                          type: object
                          properties:
                            pharmacy_id:
                              type: integer
                            pharmacy_name:
                              type: string
                            total_quantity:
                              type: integer
                            total_amount:
                              type: number
  "/api/orders":
    get:
      summary: Get all orders (support filters & keyword search)
      tags:
      - Orders
      parameters:
      - name: keyword
        in: query
        description: Keyword search by user or pharmacy name
        schema:
          type: string
      - name: user_id
        in: query
        description: Filter by user ID
        schema:
          type: integer
      - name: pharmacy_id
        in: query
        description: Filter by pharmacy ID
        schema:
          type: integer
      - name: price_min
        in: query
        description: Minimum total price
        schema:
          type: number
      - name: price_max
        in: query
        description: Maximum total price
        schema:
          type: number
      - name: start_date
        in: query
        description: Start date (yyyy-mm-dd)
        schema:
          type: string
      - name: end_date
        in: query
        description: End date (yyyy-mm-dd)
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        user_id:
                          type: integer
                        user_name:
                          type: string
                        pharmacy_id:
                          type: integer
                        pharmacy_name:
                          type: string
                        total_price:
                          type: number
                        created_at:
                          type: string
                          format: date_time
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              mask_type:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                  name:
                                    type: string
                              price:
                                type: number
                              quantity:
                                type: integer
    post:
      summary: Create a new order (support multiple masks)
      tags:
      - Orders
      parameters: []
      responses:
        '200':
          description: Success
        '400':
          description: Validation failed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      mask_id:
                        type: integer
                      quantity:
                        type: integer
                    required:
                    - mask_id
                    - quantity
              required:
              - user_id
              - items
  "/api/orders/{id}":
    get:
      summary: Get a specific order
      tags:
      - Orders
      parameters:
      - name: id
        in: path
        required: true
        description: Order ID
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      user_name:
                        type: string
                      pharmacy_name:
                        type: string
                      total_price:
                        type: number
                      created_at:
                        type: string
                        format: date_time
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            mask_name:
                              type: string
                            mask_type:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                            price:
                              type: number
                            quantity:
                              type: integer
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  "/api/pharmacies":
    get:
      summary: Get all pharmacies (supports keyword / day_of_week / time filter)
      tags:
      - Pharmacies
      parameters:
      - name: keyword
        in: query
        required: false
        description: Fuzzy search pharmacy name (case-insensitive)
        schema:
          type: string
      - name: day_of_week
        in: query
        required: false
        description: Filter by opening day (0=Sun, 1=Mon, ..., 6=Sat)
        schema:
          type: integer
      - name: time
        in: query
        required: false
        description: 'Filter by time (format: HH:mm, e.g. 14:30)'
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        opening_hours_text:
                          type: string
    post:
      summary: Create a new pharmacy
      tags:
      - Pharmacies
      parameters: []
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      cash_balance:
                        type: number
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                cash_balance:
                  type: number
                opening_hours:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: object
                      properties:
                        open:
                          type: string
                          example: '09:00'
                        close:
                          type: string
                          example: '18:00'
              required:
              - name
              - cash_balance
              - opening_hours
  "/api/pharmacies/{id}":
    get:
      summary: Get pharmacy details
      tags:
      - Pharmacies
      parameters:
      - name: id
        in: path
        description: Pharmacy ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      cash_balance:
                        type: number
                      opening_hours_text:
                        type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: 'null'
  "/api/pharmacies/{pharmacy_id}/masks":
    get:
      summary: Get all masks of a pharmacy
      tags:
      - Pharmacies
      parameters:
      - name: pharmacy_id
        in: path
        description: Pharmacy ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                        stock:
                          type: integer
                        pharmacy_id:
                          type: integer
                        created_at:
                          type: string
                          format: date_time
                        updated_at:
                          type: string
                          format: date_time
                        mask_type:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            description:
                              type: string
                              nullable: true
                            color:
                              type: string
                              nullable: true
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: 'null'
  "/api/pharmacies/{pharmacy_id}/mask_purchases":
    post:
      summary: Pharmacy purchase multiple masks
      tags:
      - Pharmacies
      parameters:
      - name: pharmacy_id
        in: path
        description: Pharmacy ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                      total_price:
                        type: number
                      pharmacy:
                        type: object
                      masks:
                        type: array
        '422':
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                purchases:
                  type: array
                  items:
                    type: object
                    properties:
                      mask_type_id:
                        type: integer
                        description: MaskType ID
                      quantity:
                        type: integer
                        description: Quantity to purchase
                      unit_price:
                        type: number
                        format: float
                        description: Unit price of the mask
                    required:
                    - mask_type_id
                    - quantity
                    - unit_price
              required:
              - purchases
  "/api/pharmacies/{pharmacy_id}/add_funds":
    post:
      summary: Add funds to pharmacy
      tags:
      - Pharmacies
      parameters:
      - name: pharmacy_id
        in: path
        description: Pharmacy ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                      cash_balance:
                        type: number
        '422':
          description: Invalid amount
        '404':
          description: Pharmacy not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
              required:
              - amount
  "/api/pharmacies/{id}/opening_hours":
    put:
      summary: Update pharmacy opening hours
      tags:
      - Pharmacies
      parameters:
      - name: id
        in: path
        description: Pharmacy ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Opening hours updated
        '404':
          description: Pharmacy not found
        '422':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                opening_hours:
                  type: object
                  example:
                    Mon:
                    - open: '09:00'
                      close: '18:00'
                    Tue:
                    - open: '09:00'
                      close: '18:00'
                    Wed:
                    - open: '09:00'
                      close: '18:00'
                    Thu:
                    - open: '09:00'
                      close: '18:00'
                    Fri:
                    - open: '09:00'
                      close: '18:00'
                    Sat:
                    - open: '10:00'
                      close: '14:00'
                    Sun: []
              required:
              - opening_hours
  "/api/pharmacies/filter_by_mask_conditions":
    get:
      summary: Filter pharmacies by mask conditions
      tags:
      - Pharmacies
      parameters:
      - name: stock_gt
        in: query
        required: false
        description: Required if no other filters are provided
        schema:
          type: integer
      - name: stock_lt
        in: query
        required: false
        description: Required if no other filters are provided
        schema:
          type: integer
      - name: mask_price_min
        in: query
        required: false
        description: Required if no other filters are provided
        schema:
          type: number
      - name: mask_price_max
        in: query
        required: false
        description: Required if no other filters are provided
        schema:
          type: number
      responses:
        '200':
          description: Success with condition
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        mask_count:
                          type: integer
        '400':
          description: Missing filter parameters
  "/api/users":
    get:
      summary: Get all users (support search by name / phone_number)
      tags:
      - Users
      parameters:
      - name: name
        in: query
        description: Keyword to search user name
        schema:
          type: string
      - name: phone_number
        in: query
        description: User phone number
        schema:
          type: string
      responses:
        '200':
          description: Success - Search by name and phone_number
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        phone_number:
                          type: string
                        cash_balance:
                          type: number
    post:
      summary: Create user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: Create success
        '422':
          description: |-
            Validation failed, possible reasons:
            - Missing phone number
            - Invalid phone number length
            - Phone number already exists
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phone_number:
                  type: string
                cash_balance:
                  type: number
              required:
              - name
              - phone_number
  "/api/users/{id}":
    get:
      summary: Get user by id
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      phone_number:
                        type: string
                        nullable: true
                      cash_balance:
                        type: number
        '404':
          description: User not found
  "/api/users/{id}/add_balance":
    post:
      summary: Add balance to user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
        '404':
          description: User not found
        '400':
          description: Invalid amount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
              required:
              - amount
servers:
- url: http://35.229.247.36:3000
